name: Build APK for AllDownloader

on:
  push:
    branches:
      - main

jobs:
  build-apk:
    runs-on: ubuntu-22.04

    steps:
      # 1. Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configurar Python, Java, y Buildozer
      - name: Setup Python, Java and Buildozer
        run: |
            sudo apt update
            sudo apt install -y python3-venv openjdk-11-jdk build-essential libffi-dev libssl-dev zlib1g-dev
            # Instalar Cython
            pip install cython
            # Configurar JAVA_HOME para que apunte a Java 11
            sudo update-alternatives --config java
            echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV
            pip install --upgrade pip
            pip install buildozer

      # 3. Compilar el APK
      - name: Build APK
        run: |
          buildozer android debug

      # 4. Subir el APK como artefacto
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: AllDownloader-APK
          path: bin/*.apk
      #5. Ajustá el archivo del workflow para usar la última versión de Gradle y Buildozer
      - name: Install specific Gradle version
        run: |
          wget https://services.gradle.org/distributions/gradle-8.2-bin.zip
          sudo unzip -d /opt/gradle gradle-8.2-bin.zip
          sudo ln -s /opt/gradle/gradle-8.2/bin/gradle /usr/bin/gradle


      #6. Limpieza de caché para dependencias
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-




